group 'com.example'
version '1.0-SNAPSHOT'

buildscript {
    ext.config_file ='config.yml'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        classpath "eu.appsatori:gradle-fatjar-plugin:$fatjarPluginVersion"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'fatjar'
apply plugin: 'application'
apply plugin: 'kotlin-jpa'

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = 'com.dropwizard.study.StudyApplication'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonModuleKotlinVersion"

    compile "io.dropwizard:dropwizard-core:$dropWizardVersion"
    compile "io.dropwizard:dropwizard-hibernate:$dropWizardVersion"
    compile "io.dropwizard:dropwizard-migrations:$dropWizardVersion"

    runtime "com.h2database:h2:$h2EmbeddedDBVersion"

    // JAXB included for Java 9+
    compile "javax.xml.bind:jaxb-api:$jaxbVersion"
    compile "com.sun.xml.bind:jaxb-core:$jaxbVersion"
    compile "com.sun.xml.bind:jaxb-impl:$jaxbVersion"
    compile "javax.activation:activation:$activationVersion"

    compile "org.postgresql:postgresql:$postgresDriverVersion"

    testCompile "org.junit.jupiter:junit-jupiter:$junitVersion"
    testCompile "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testCompile "io.dropwizard:dropwizard-testing:$dropWizardVersion"
    testCompile "io.dropwizard:dropwizard-client:$dropWizardVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
}

fatJar {
    manifest {
        attributes 'Main-Class': mainClassName
    }

    // Exclude these files to avoid jar signature errors
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

// Start the Dropwizard service
run {
    args 'server', config_file
}

// Check the status of the database with Liquibase
task dbStatus(type: JavaExec) {
    main mainClassName
    classpath sourceSets.main.runtimeClasspath
    args 'db', 'status', config_file
}

// Migrate the latest db changes with Liquibase
task dbMigrate(type: JavaExec) {
    main mainClassName
    classpath sourceSets.main.runtimeClasspath
    args 'db', 'migrate', config_file
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


